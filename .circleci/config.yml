version: 2.1

jobs:
  frontend:
    docker:
      - image: node:16-alpine
        environment:
          LARAVEL_BYPASS_ENV_CHECK: 1
    steps:
      - checkout

      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - cache-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - cache-

      - run:
          name: Yarn install
          command: yarn install
      - save_cache:
          key: cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Yarn lint
          command: yarn lint

  backend:
    docker:
      - image: sunasteriskrnd/php-workspace:8.1-alpine
        environment:
          APP_ENV: testing
          DB_HOST: localhost
          REDIS_HOST: localhost
      - image: postgres:10.8
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - checkout

      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - cache-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - cache-

      - run:
          name: Composer install
          command: composer install --ignore-platform-reqs

      - save_cache:
          key: cache-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - run:
          name: PHP CodeSniffer
          command: composer cs

      - run:
          name: Composer analysis
          command: composer analyze

      - run:
          name: PHPUnit
          command: |
            echo 'memory_limit=-1' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
            docker-php-ext-disable xdebug
            cp .env.example .env.testing
            php artisan key:generate --quiet
            php artisan migrate
            composer coverage

      - store_artifacts:
          path: coverage
      - store_test_results:
          path: coverage/junit.xml

  frontend-without-cache:
    docker:
      - image: node:16-alpine
        environment:
          LARAVEL_BYPASS_ENV_CHECK: 1
    steps:
      - checkout

      - run:
          name: Yarn install
          command: yarn install
      - run:
          name: Yarn lint
          command: yarn lint

  backend-without-cache:
    docker:
      - image: sunasteriskrnd/php-workspace:8.1-alpine
        environment:
          APP_ENV: testing
          DB_HOST: localhost
          REDIS_HOST: localhost
      - image: postgres:10.8
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - checkout

      - run:
          name: Composer install
          command: composer install --ignore-platform-reqs

      - run:
          name: PHP CodeSniffer
          command: composer cs

      - run:
          name: Composer analysis
          command: composer analyze

      - run:
          name: PHPUnit
          command: |
            echo 'memory_limit=-1' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
            docker-php-ext-disable xdebug
            cp .env.example .env.testing
            php artisan key:generate --quiet
            php artisan migrate
            composer coverage

      - store_artifacts:
          path: coverage
      - store_test_results:
          path: coverage/junit.xml

workflows:
  ci-with-cache:
    jobs:
      - frontend
      - backend
  ci-without-cache:
    jobs:
      - frontend-without-cache
      - backend-without-cache



