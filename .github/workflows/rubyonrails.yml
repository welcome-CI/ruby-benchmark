name: Ruby on Rails CI

on:
  - push

jobs:
  yarn-install:
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Add build dependencies to container
        run: |
          apk add --update --no-progress \
          tar
      - name: Restore yarn cache
        id: node-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Yarn caching
        uses: actions/cache/save@v3
        id: node-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}

  eslint:
    needs: yarn-install
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Add build dependencies to container
        run: |
          apk add --update --no-progress \
          tar
      - name: Restore yarn cache
        id: node-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Yarn lint
        run: yarn run eslint .

  prettier:
    needs: yarn-install
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Add build dependencies to container
        run: |
          apk add --update --no-progress \
          tar
      - name: Restore yarn cache
        id: node-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: prettier
        run: yarn run prettier --check .

  bundle-install:
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby-chrome:3.1.2-node

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore gem cache
        id: gem-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Bundle install
        run: |
          cp database-ci.yml config/database.yml
          gem install bundler -v 2.3.15
          bundle config set path vendor/bundle
          bundle install

      - name: Gem caching
        uses: actions/cache/save@v3
        id: gem-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}

  halm-lint:
    needs: bundle-install
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby-chrome:3.1.2-node

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore gem cache
        id: gem-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: HAML-Lint
        run: |
          bundle install
          bundle exec haml-lint --parallel

  rubocop:
    needs: bundle-install
    runs-on: ubuntu-latest
    container:
      image: sunci/ruby-chrome:3.1.2-node

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore gem cache
        id: gem-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Rubocop
        run: |
          bundle install
          bundle exec rubocop --parallel

  rspec:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Build assets
        run: |
          yarn build
          yarn build:css
      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run RSpec
        run: bundle exec rspec

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage
